{"version":3,"sources":["Question.js","TagPicker.js","AddQuestionDialog.js","GenerateTestDialog.js","App.js","serviceWorker.js","index.js"],"names":["Question","delete","axios","props","id","then","onDelete","className","Body","Title","this","text","Toggle","variant","Menu","alignRight","Item","href","onClick","Text","isOpen","answers","map","answer","correct","Footer","tags","tag","name","React","TagPicker","ref","index","onChange","filter","_","i","add","e","target","value","console","log","every","t","concat","key","style","cursor","fontSize","type","placeholder","size","borderRadius","maxWidth","onBlur","onKeyDown","current","blur","initialState","is_open","AddQuestionDialog","state","setName","setState","setAnswerCorrectness","isCorrect","prevState","setAnswer","addAnwer","removeAnswer","post","a","onHide","reset","onAdd","Header","closeButton","Group","Label","Control","required","autoComplete","Check","label","checked","Prepend","Checkbox","Append","length","disabled","generated","files","GenerateTestDialog","backendURL","generate","properties","res","data","file","rel","split","pop","as","Row","column","sm","groups_number","Number","closed_questions_number","opened_questions_number","Hello","questions","addModalShow","genModalShow","fetchData","get","showModal","hideModal","width","justifyContent","show","Component","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72ca805e.chunk.js","sourcesContent":["import * as React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport axios from 'axios'\n\nexport default class Question extends React.Component {\n  // onIncrement = () => this.updateEnthusiasm(this.state.currentEnthusiasm + 1);\n  // onDecrement = () => this.updateEnthusiasm(this.state.currentEnthusiasm - 1);\n\n  delete = () => {\n    axios.delete(`questions/${this.props.id}`).then(() => { this.props.onDelete(); })\n  }\n\n  render() {\n    // const { name } = this.props;\n\n    // if (this.state.currentEnthusiasm <= 0) {\n    //   throw new Error('You could be a little more enthusiastic. :D');\n    // }\n\n    return (\n      <Card className=\"question mb-5\">\n        <Card.Body>\n          <Card.Title className=\"d-inline-block\">{this.props.text}</Card.Title>\n          <Dropdown className=\"d-inline-block float-right\">\n            <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" />\n            <Dropdown.Menu alignRight>\n              <Dropdown.Item className=\"text-danger\" href=\"#/\" onClick={this.delete}>Usu≈Ñ pytanie</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Card.Text>\n          { !this.props.isOpen ?\n            <ListGroup variant=\"flush\">\n            {this.props.answers.map(answer => (\n                <ListGroup.Item className={'answer ' + (answer.correct ? 'text-success' : 'text-danger')}>\n                  {answer.text}\n                </ListGroup.Item>\n              ))}\n            </ListGroup> : <p className=\"text-muted\">Pytanie otwarte</p>}\n          {/* <div>Kategoria: {this.props.category}</div> */}\n          </Card.Text>\n        </Card.Body>\n      <Card.Footer>\n        {this.props.tags.map(tag => (\n          <Badge variant=\"secondary\">{tag.name}</Badge>\n        ))}</Card.Footer>\n    </Card>\n    )\n  }\n}","import * as React from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default class TagPicker extends React.Component {\n  ref = React.createRef()\n\n  delete = index => {\n    this.props.onChange(this.props.tags.filter((_, i) => i !== index))\n  }\n\n  add = e => {\n    const tag = { name: e.target.value }\n    \n    console.log()\n    if (tag.name && this.props.tags.every(t => t.name !== tag.name))\n      this.props.onChange(this.props.tags.concat(tag))\n    \n    e.target.value = ''\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        { this.props.tags.map((tag, i) => (\n          <Badge\n            key={tag.name}\n            variant=\"secondary\"\n            className=\"mb-2 mr-2\"\n          >{tag.name}\n            <b className=\"ml-2\" style={{ cursor: 'pointer', fontSize: '1rem' }}\n              onClick={e => this.delete(i)}\n            >&times;</b>\n          </Badge>\n        ))}\n        <FormControl\n          ref={this.ref}\n          className=\"d-inline-block\"\n          type=\"text\"\n          placeholder=\"&#10133; Dodaj tag\"\n          size=\"sm\"\n          style={{ borderRadius: '.25rem !important', maxWidth: '7rem' }}\n          onBlur={this.add}\n          onKeyDown={ e => e.key === 'Enter' && this.ref.current.blur() }\n        />\n      </div>\n    )\n  }\n}","import * as React from 'react'\nimport axios from 'axios'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport TagPicker from './TagPicker'\n\nconst initialState = () => ({\n  text: '',\n  is_open: false,\n  // category: '',\n  answers: [\n    {\n      text: '',\n      correct: false\n    }\n  ],\n  tags: [],\n})\n\nexport default class AddQuestionDialog extends React.Component {\n  state = initialState()\n  ref = React.createRef()\n\n  setName = (text) => {\n    this.setState({\n      text\n    })\n  }\n  \n  setAnswerCorrectness = (index, isCorrect) => {\n    this.setState((prevState) => {\n      const { answers } = prevState\n      answers[index].correct = isCorrect\n\n      return {\n        answers\n      }\n    })\n  }\n\n  setAnswer = (index, answer) => {\n    this.setState((prevState) => {\n      const { answers } = prevState\n      answers[index].text = answer\n\n      return {\n        answers\n      }\n    })\n  }\n\n  addAnwer = () => {\n    this.setState((prevState) => {\n      return {\n        answers: [ ...prevState.answers, { text: '', correct: false }]\n      }\n    })\n  }\n\n  removeAnswer = (index) => {\n    this.setState((prevState) => ({\n      answers: prevState.answers.filter((_, i) => i !== index)\n    }))\n  }\n\n  add = () => {\n    axios.post('questions', { ...this.state, answers: this.state.answers.filter(a => a.text) })\n      .then(() => { this.props.onHide(); this.reset(); this.props.onAdd() })\n  }\n\n  reset = () => {\n    this.setState(initialState())\n  }\n\n  render() {\n    return (\n      <Modal {...this.props} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Dodaj pytanie</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form ref={this.ref}>\n            <Form.Group>\n              <Form.Label>Pytanie</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" required\n                autoComplete=\"off\"\n                onChange={(e) => this.setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check type=\"checkbox\" label=\"Pytanie otwarte\" checked={this.state.is_open}\n                onChange={e => this.setState({ is_open: e.target.checked })}\n              />\n            </Form.Group>\n            { !this.state.is_open && <Form.Group>\n              <Form.Label>Odpowiedzi</Form.Label>\n                {this.state.answers.map((answer, index) => (\n                  <InputGroup className=\"mb-2\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Checkbox\n                          checked={answer.correct}\n                          onChange={(e) => this.setAnswerCorrectness(index, e.target.checked)}\n                        />\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\"\n                      autoComplete=\"off\"\n                      value={answer.text}\n                      onChange={(e) => this.setAnswer(index, e.target.value)}\n                    />\n                      <InputGroup.Append>\n                        {this.state.answers.length > 1 ?\n                        <Button variant=\"outline-danger\" onClick={(e) => this.removeAnswer(index)}>Usu≈Ñ</Button> :\n                        <Button disabled variant=\"outline-secondary\" onClick={(_) =>this.removeAnswer(index)}>Usu≈Ñ</Button>}\n                      </InputGroup.Append>\n                  </InputGroup>\n                ))}\n                <a href=\"#/\" onClick={this.addAnwer}>Dodaj kolejnƒÖ odpowied≈∫</a>\n            </Form.Group> }\n            <Form.Group>\n              <Form.Label className=\"mb-0\">Tagi</Form.Label>\n              <Form.Text className=\"text-muted mt-0\">\n                (wybierz co najmniej jeden)\n              </Form.Text>\n              <TagPicker className=\"mt-2\" tags={this.state.tags} onChange={tags => this.setState({ tags })}/>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={ () => { this.reset(); this.props.onHide() } }>Anuluj</Button>\n          <Button variant=\"primary\" onClick={this.add}>Dodaj pytanie</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","import * as React from 'react'\nimport axios from 'axios'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport TagPicker from './TagPicker'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n// import InputGroup from 'react-bootstrap/InputGroup'\n\nconst initialState = () => ({\n  tags: [],\n  generated: false,\n  files: []\n})\n\nexport default class GenerateTestDialog extends React.Component {\n  state = initialState()\n  ref = React.createRef()\n  backendURL = 'http://localhost:5000'\n\n  generate = () => {\n    const properties = { ...this.state }\n    delete properties.generated\n    delete properties.files\n\n    axios.post('exam/generate', properties)\n      .then(res => { this.setState({ generated: true, files: res.data.files })})\n  }\n\n  reset = () => {\n    this.setState(initialState())\n  }\n\n  render() {\n    return (\n      <Modal {...this.props} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Generuj test</Modal.Title>\n        </Modal.Header>\n\n        { !this.state.generated ? <React.Fragment><Modal.Body>\n          <Form ref={this.ref}>\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"4\">Podaj ilo≈õƒá grup</Form.Label>\n              <Col sm=\"4\">\n              <Form.Control type=\"number\" required\n                onChange={(e) => this.setState({ groups_number: Number(e.target.value) })}\n              />\n              </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n              <Form.Label column sm=\"4\">Podaj ilo≈õƒá pyta≈Ñ zamkniƒôtych</Form.Label>\n              <Col sm=\"4\">\n              <Form.Control type=\"number\" required\n                onChange={(e) => this.setState({ closed_questions_number: Number(e.target.value) })}\n              />\n              </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n              <Form.Label column sm=\"4\">Podaj ilo≈õƒá pyta≈Ñ otwartych</Form.Label>\n              <Col sm=\"4\">\n              <Form.Control type=\"number\" required\n                onChange={(e) => this.setState({ opened_questions_number: Number(e.target.value) })}\n              />\n              </Col>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Wybierz tagi</Form.Label>\n              <TagPicker tags={this.state.tags} onChange={tags => this.setState({ tags })}/>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={ () => { this.reset(); this.props.onHide() } }>Anuluj</Button>\n          <Button variant=\"primary\" onClick={ () => { this.generate();this.reset() } }>Generuj test</Button>\n        </Modal.Footer></React.Fragment> :\n        <React.Fragment>\n          <Modal.Body>\n            { this.state.files.map((file, i) => (\n              <div>\n                < a key={i} href={this.backendURL + file} target=\"_blank\" rel=\"noopener noreferrer\">{ file.split('/').pop() }</a>\n              </div>\n            )) }\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={ () => { this.reset(); this.props.onHide() } }>Zamknij</Button>\n          </Modal.Footer>\n        </React.Fragment>}\n      </Modal>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\n\nimport axios from 'axios'\nimport { default as Question } from './Question'\n\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\nimport AddQuestionDialog from './AddQuestionDialog'\nimport GenerateTestDialog from './GenerateTestDialog'\n\n\nexport default class Hello extends React.Component {\n  state = {\n    questions: [],\n    addModalShow: false,\n    genModalShow: false\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  fetchData = () => axios.get('questions').then(res => {\n    const questions = res.data\n    this.setState({ questions })\n  })\n\n  showModal = () => { this.setState({ addModalShow: true }) }\n  hideModal = () => { this.setState({ addModalShow: false }) }\n\n  render() {\n    return (\n      <div className=\"mt-5 mx-5\">\n        <ButtonToolbar className=\"mb-4\" style={{ width: '100%', justifyContent: 'space-between' }}>\n          <Button variant=\"outline-primary\" onClick={this.showModal}>\n            Dodaj pytanie\n          </Button>\n\n          <Button variant=\"primary\" onClick={() => this.setState({ genModalShow: true })}>\n            Generuj test\n          </Button>\n\n          <AddQuestionDialog\n            show={this.state.addModalShow}\n            onHide={this.hideModal}\n            onAdd={this.fetchData}\n          />\n          <GenerateTestDialog\n            show={this.state.genModalShow}\n            onHide={() => this.setState({ genModalShow: false })}\n          />\n        </ButtonToolbar>\n        { this.state.questions.length > 0 ? <div className=\"questions-list\">\n          { this.state.questions.map(({ id, text, answers, tags, is_open }) => \n            <Question onDelete={this.fetchData} id={id} text={text} answers={answers} tags={tags} isOpen={is_open} />\n          ) } </div> :\n            <p className=\"my-5 text-muted text-center\">Brak pyta≈Ñ w bazie.</p>}\n        </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://127.0.0.1:5000/'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}