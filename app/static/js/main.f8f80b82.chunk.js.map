{"version":3,"sources":["helpers.js","TagPicker.js","AddQuestionForm.js","AddQuestionDialog.js","Question.js","GenerateTestForm.js","GenerateTestDialog.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["extractStrings","obj","Object","values","flatMap","TagPicker","ref","React","delete","index","props","onChange","tags","filter","_","i","add","e","tag","name","target","value","console","log","every","t","concat","className","this","map","key","variant","style","cursor","fontSize","onClick","type","placeholder","size","borderRadius","maxWidth","onBlur","onKeyDown","current","blur","initialState","text","is_open","answers","correct","AddQuestionForm","state","question","setName","setState","setAnswerCorrectness","isCorrect","prevState","setAnswer","answer","addAnwer","removeAnswer","reset","Group","Label","Control","required","autoComplete","Check","label","checked","Prepend","Checkbox","Append","length","disabled","href","Text","errors","AddQuestionDialog","isEditing","undefined","axios","put","id","post","then","onHide","onAdd","catch","error","response","data","Header","closeButton","Title","Body","Footer","Question","showEditDialog","onDelete","edit","show","onEdit","Toggle","Menu","alignRight","Item","marginBottom","GenerateTestDialog","as","Row","column","sm","groups_number","Number","closed_questions_number","opened_questions_number","generated","files","generate","properties","res","file","rel","split","pop","Hello","questions","addModalShow","genModalShow","fetchData","get","showModal","hideModal","width","justifyContent","q","Component","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8f80b82.chunk.js","sourcesContent":["export const extractStrings = obj => {\n  switch (typeof obj) {\n    case 'object':\n      return Object.values(obj).flatMap(extractStrings)\n    case 'array':\n      return obj\n    case 'string':\n      return [obj]\n    default:\n      return []\n  }\n}","import * as React from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default class TagPicker extends React.Component {\n  ref = React.createRef()\n\n  delete = index => {\n    this.props.onChange(this.props.tags.filter((_, i) => i !== index))\n  }\n\n  add = e => {\n    const tag = { name: e.target.value }\n    \n    console.log()\n    if (tag.name && this.props.tags.every(t => t.name !== tag.name))\n      this.props.onChange(this.props.tags.concat(tag))\n    \n    e.target.value = ''\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        { this.props.tags.map((tag, i) => (\n          <Badge\n            key={tag.name}\n            variant=\"secondary\"\n            className=\"mb-2 mr-2\"\n          >{tag.name}\n            <b className=\"ml-2\" style={{ cursor: 'pointer', fontSize: '1rem' }}\n              onClick={e => this.delete(i)}\n            >&times;</b>\n          </Badge>\n        ))}\n        <FormControl\n          ref={this.ref}\n          className=\"d-inline-block\"\n          type=\"text\"\n          placeholder=\"&#10133; Dodaj tag\"\n          size=\"sm\"\n          style={{ borderRadius: '.25rem !important', maxWidth: '7rem' }}\n          onBlur={this.add}\n          onKeyDown={ e => e.key === 'Enter' && this.ref.current.blur() }\n        />\n      </div>\n    )\n  }\n}","import * as React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport TagPicker from './TagPicker'\n\nconst initialState = () => ({\n  text: '',\n  is_open: false,\n  // category: '',\n  answers: [\n    {\n      text: '',\n      correct: false\n    }\n  ],\n  tags: [],\n})\n\nexport default class AddQuestionForm extends React.Component {\n  state = this.props.question || initialState()\n  ref = React.createRef()\n\n  setName = (text) => {\n    this.setState({\n      text\n    })\n  }\n  \n  setAnswerCorrectness = (index, isCorrect) => {\n    this.setState((prevState) => {\n      const { answers } = prevState\n      answers[index].correct = isCorrect\n\n      return {\n        answers\n      }\n    })\n  }\n\n  setAnswer = (index, answer) => {\n    this.setState((prevState) => {\n      const { answers } = prevState\n      answers[index].text = answer\n\n      return {\n        answers\n      }\n    })\n  }\n\n  addAnwer = () => {\n    this.setState((prevState) => {\n      return {\n        answers: [ ...prevState.answers, { text: '', correct: false }]\n      }\n    })\n  }\n\n  removeAnswer = (index) => {\n    this.setState((prevState) => ({\n      answers: prevState.answers.filter((_, i) => i !== index)\n    }))\n  }\n\n  reset = () => {\n    this.setState(initialState())\n  }\n\n  render() {\n    return (\n          <Form ref={this.ref}>\n            <Form.Group>\n              <Form.Label>Pytanie</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" required\n                value={this.state.text}\n                autoComplete=\"off\"\n                onChange={(e) => this.setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Check type=\"checkbox\" label=\"Pytanie otwarte\" checked={this.state.is_open}\n                onChange={e => this.setState({ is_open: e.target.checked })}\n              />\n            </Form.Group>\n            { !this.state.is_open && <Form.Group>\n              <Form.Label>Odpowiedzi</Form.Label>\n                {this.state.answers.map((answer, index) => (\n                  <InputGroup key={index} className=\"mb-2\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Checkbox\n                          checked={answer.correct}\n                          onChange={(e) => this.setAnswerCorrectness(index, e.target.checked)}\n                        />\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\"\n                      autoComplete=\"off\"\n                      value={answer.text}\n                      onChange={(e) => this.setAnswer(index, e.target.value)}\n                    />\n                      <InputGroup.Append>\n                        {this.state.answers.length > 1 ?\n                        <Button variant=\"outline-danger\" onClick={(e) => this.removeAnswer(index)}>Usuń</Button> :\n                        <Button disabled variant=\"outline-secondary\" onClick={(_) =>this.removeAnswer(index)}>Usuń</Button>}\n                      </InputGroup.Append>\n                  </InputGroup>\n                ))}\n                <a href=\"#/\" onClick={this.addAnwer}>Dodaj kolejną odpowiedź</a>\n            </Form.Group> }\n            <Form.Group>\n              <Form.Label className=\"mb-0\">Tagi</Form.Label>\n              <Form.Text className=\"text-muted mt-0\">\n                (wybierz co najmniej jeden)\n              </Form.Text>\n              <TagPicker className=\"mt-2\" tags={this.state.tags} onChange={tags => this.setState({ tags })}/>\n            </Form.Group>\n          </Form>\n    )\n  }\n}","import * as React from 'react'\nimport axios from 'axios'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport { extractStrings } from './helpers'\n\nimport AddQuestionFrom from './AddQuestionForm'\n\nconst initialState = () => ({\n  errors: null\n})\n\nexport default class AddQuestionDialog extends React.Component {\n  state = initialState()\n  ref = React.createRef()\n  isEditing = !!this.props.question\n\n  add = () => {\n    const question = {\n      ...this.ref.current.state,\n      ...(this.ref.current.state.is_open && { answers: undefined })\n    }\n\n    const response = this.isEditing ?\n          axios.put(`questions/${question.id}`, question) :\n          axios.post('questions/', question)\n\n    response\n      .then(() => {\n        this.onHide()\n        this.props.onAdd()\n      })\n      .catch(e => {\n        const { error } = e.response.data\n        this.setState({ errors: extractStrings(error) })\n     })\n  }\n\n  onHide = () => {\n    this.setState(initialState())\n    this.ref.current.reset()\n    this.props.onHide()\n  }\n\n  render() {\n    const text = this.isEditing ? 'Edytuj pytanie' : 'Dodaj pytanie'\n\n    return (\n      <Modal { ...{ ...this.props, onHide: this.onHide } } size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>{ text }</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          { this.state.errors &&\n            <Alert variant=\"danger\">\n              <ul>\n                { this.state.errors.map((e, i) => \n                  <li key={i}>{ e }</li>)\n                }\n              </ul>\n            </Alert>}\n          <AddQuestionFrom ref={this.ref} question={this.props.question} />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={ () => { this.onHide() } }>Anuluj</Button>\n          <Button variant=\"primary\" onClick={this.add}>{ text }</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","import * as React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport AddQuestionDialog from './AddQuestionDialog'\n\nimport axios from 'axios'\n\nexport default class Question extends React.Component {\n  state = {\n    showEditDialog: false\n  }\n  // onIncrement = () => this.updateEnthusiasm(this.state.currentEnthusiasm + 1);\n  // onDecrement = () => this.updateEnthusiasm(this.state.currentEnthusiasm - 1);\n\n  delete = () => {\n    const { id } = this.props.question\n\n    axios.delete(`questions/${id}`).then(() => { this.props.onDelete() })\n  }\n\n  edit = () => {\n    this.setState({ showEditDialog: true })\n  }\n\n  render() {\n    // const { name } = this.props;\n\n    // if (this.state.currentEnthusiasm <= 0) {\n    //   throw new Error('You could be a little more enthusiastic. :D');\n    // }\n    const { text, answers, tags, is_open } = this.props.question\n\n    return (\n      <Card className=\"question mb-5\">\n        <AddQuestionDialog\n          question={this.props.question}\n          show={this.state.showEditDialog}\n          onHide={() => { this.setState({ showEditDialog: false }) } }\n          onAdd={this.props.onEdit}\n        />\n        <Card.Body>\n          <Card.Title className=\"d-inline-block\">{text}</Card.Title>\n          <Dropdown className=\"d-inline-block float-right\">\n            <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" />\n            <Dropdown.Menu alignRight>\n              <Dropdown.Item href=\"#/\" onClick={this.edit}>Edytuj pytanie</Dropdown.Item>\n              <Dropdown.Item className=\"text-danger\" href=\"#/\" onClick={this.delete}>Usuń pytanie</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Card.Text>\n          { !is_open ?\n            <ListGroup variant=\"flush\">\n            { answers.map((answer, index) => (\n                <ListGroup.Item key={index} className={'answer ' + (answer.correct ? 'text-success' : 'text-danger')}>\n                  {answer.text}\n                </ListGroup.Item>\n              )) }\n            </ListGroup> : <p className=\"text-muted\">Pytanie otwarte</p>}\n          {/* <div>Kategoria: {this.props.category}</div> */}\n          </Card.Text>\n        </Card.Body>\n      { !!tags.length && <Card.Footer>\n        <div style={{ marginBottom: '-.5rem' }}>\n        { tags.map(tag => (\n          <Badge key={tag.name} className=\"mb-2 mr-2\" variant=\"info\">{tag.name}</Badge>\n        )) }</div></Card.Footer> }\n    </Card>\n    )\n  }\n}","import * as React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport TagPicker from './TagPicker'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n// import InputGroup from 'react-bootstrap/InputGroup'\n\nconst initialState = () => ({\n  // groups_number: 1,\n  // closed_questions_number: 0,\n  // opened_questions_number: 0,\n  tags: []\n})\n\nexport default class GenerateTestDialog extends React.Component {\n  state = initialState()\n  ref = React.createRef()\n\n  reset = () => {\n    this.setState(initialState())\n  }\n\n  render() {\n    return (\n      <Form ref={this.ref}>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"4\">Podaj ilość grup</Form.Label>\n          <Col sm=\"4\">\n            <Form.Control type=\"number\" required\n              // value={this.state.groups_number}\n              onChange={(e) => this.setState({ groups_number: Number(e.target.value) })}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"4\">Podaj ilość pytań zamkniętych</Form.Label>\n          <Col sm=\"4\">\n            <Form.Control type=\"number\" required\n              // value={this.state.closed_questions_number}\n              onChange={(e) => this.setState({ closed_questions_number: Number(e.target.value) })}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"4\">Podaj ilość pytań otwartych</Form.Label>\n          <Col sm=\"4\">\n            <Form.Control type=\"number\" required\n              // value={this.state.opened_questions_number}\n              onChange={(e) => this.setState({ opened_questions_number: Number(e.target.value) })}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Wybierz tagi</Form.Label>\n          <TagPicker tags={this.state.tags} onChange={tags => this.setState({ tags })}/>\n        </Form.Group>\n      </Form>\n    )\n  }\n}","import * as React from 'react'\nimport axios from 'axios'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport GenerateTestForm from './GenerateTestForm'\nimport { extractStrings } from './helpers'\nimport { backendUrl } from './constants'\n\nconst initialState = () => ({\n  generated: false,\n  files: [],\n  errors: null\n})\n\nexport default class GenerateTestDialog extends React.Component {\n  state = initialState()\n  ref = React.createRef()\n\n  generate = () => {\n    const properties = this.ref.current.state\n\n    axios.post('exam/generate', properties)\n      .then(res => { this.setState({ generated: true, files: res.data.files })})\n      .catch(e => {\n        const { error } = e.response.data\n        this.setState({ errors: extractStrings(error) })\n     })\n  }\n\n  onHide = () => {\n    this.setState(initialState())\n    this.ref.current.reset()\n    this.props.onHide()\n  }\n\n  render() {\n    return (\n      <Modal { ...{ ...this.props, onHide: this.onHide } } size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Generuj test</Modal.Title>\n        </Modal.Header>\n\n        { !this.state.generated ? <React.Fragment><Modal.Body>\n          { this.state.errors &&\n            <Alert variant=\"danger\">\n              <ul>\n                { this.state.errors.map((e, i) => \n                  <li key={i}>{ e }</li>)\n                }\n              </ul>\n            </Alert>}\n          <GenerateTestForm ref={this.ref} />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={ () => { this.onHide() } }>Anuluj</Button>\n          <Button variant=\"primary\" onClick={ () => { this.generate() } }>Generuj test</Button>\n        </Modal.Footer></React.Fragment> :\n        <React.Fragment>\n          <Modal.Body>\n            { this.state.files.map((file, index) => (\n              <div key={index}>\n                <a href={backendUrl + file} target=\"_blank\" rel=\"noopener noreferrer\">{ file.split('/').pop() }</a>\n              </div>\n            )) }\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={ () => { this.onHide() } }>Zamknij</Button>\n          </Modal.Footer>\n        </React.Fragment>}\n      </Modal>\n    )\n  }\n}","export const backendUrl = 'http://localhost:5000'","import React from 'react';\nimport './App.css';\n\nimport axios from 'axios'\nimport { default as Question } from './Question'\n\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\nimport AddQuestionDialog from './AddQuestionDialog'\nimport GenerateTestDialog from './GenerateTestDialog'\n\n\nexport default class Hello extends React.Component {\n  state = {\n    questions: [],\n    addModalShow: false,\n    genModalShow: false\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  fetchData = () => axios.get('questions/').then(res => {\n    const questions = res.data\n    this.setState({ questions })\n  })\n\n  showModal = () => { this.setState({ addModalShow: true }) }\n  hideModal = () => { this.setState({ addModalShow: false }) }\n\n  render() {\n    return (\n      <div className=\"mt-5 mx-5\">\n        <ButtonToolbar className=\"mb-4\" style={{ width: '100%', justifyContent: 'space-between' }}>\n          <Button variant=\"outline-primary\" onClick={this.showModal}>\n            Dodaj pytanie\n          </Button>\n\n          <Button variant=\"primary\" onClick={() => this.setState({ genModalShow: true })}>\n            Generuj test\n          </Button>\n\n          <AddQuestionDialog\n            show={this.state.addModalShow}\n            onHide={this.hideModal}\n            onAdd={this.fetchData}\n          />\n          <GenerateTestDialog\n            show={this.state.genModalShow}\n            onHide={() => this.setState({ genModalShow: false })}\n          />\n        </ButtonToolbar>\n        { this.state.questions.length > 0 ? <div className=\"questions-list\">\n          { this.state.questions.map(q => \n            <Question key={q} question={q}\n              onDelete={this.fetchData}\n              onEdit={this.fetchData} />\n          ) } </div> :\n            <p className=\"my-5 text-muted text-center\">Brak pytań w bazie.</p>}\n        </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://127.0.0.1:5000/'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}